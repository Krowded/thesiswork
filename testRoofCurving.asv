% x = normalize([0 56.7840 88.5324]); %normal left
% x = normalize([0   57.7930  -93.8036]); %normal right
% x = normalize([0 13.5853 9.5066]); %magic left
x = normalize([-0.1003   14.1096   -9.0456]); %magic right
y = -cross(x, [1 0 0]);
model.upVector = x;
model.frontVector = y;

%Original
model2 = model;
write_ply(model2.vertices, model2.faces, 'testOriginal.ply');

model2 = curveRoof(roofStruct, foundationCurves);


% %Remove curve
% minHeight = min(model2.vertices*model2.upVector');
% maxHeight = max(model2.vertices*model2.upVector');
% model2.vertices = curveVertices(model2.vertices, curveFunction, x, y, minHeight, maxHeight);
% try
%     model2.slots = curveVertices(model2.slots, curveFunction, x, y, minHeight, maxHeight);
% catch
%     warning('no slots found');
% end
% write_ply(model2.vertices, model2.faces, 'test.ply');
% 
% 
% curveFunction = collectCurves(foundationCurves, flatY);
% 
% %Add new curve
% model2.vertices = curveVertices(model2.vertices, curveFunction, x, y, minHeight, maxHeight);
% model2.vertices = curveVertices(model2.vertices, curveFunction, x, y, minHeight, maxHeight);
% try
%     model2.slots = curveVertices(model2.slots, curveFunction, x, y, minHeight, maxHeight);
%     model2.slots = curveVertices(model2.slots, curveFunction, x, y, minHeight, maxHeight);
% catch
%     warning('no slots found');
% end



%Fix any overlap
% max(model2.vertices*model2.upVector')
% limit
% if max(model2.vertices*model2.upVector') > limit
%     model2 = fixOverCurving(model2, slot, -forward);
% end

%Write to file
write_ply(model2.vertices, model2.faces, 'testNewRight.ply');