function curveStructs = getFoundationCurves(wallStructs)
    %Use only points below the lowest wall highpoint
    lowestHighestPoint = Inf;
    for i = 1:length(wallStructs)
        lowestHighestPoint = min(lowestHighestPoint, max(wallStructs(i).vertices*wallStructs(i).upVector'));
    end
    
    %     lowestHighestPoint = Inf; %Remove height limit

    curveStructs = newCurveStruct();
    
    if length(wallStructs) > 1 %Attempt one curve for each wall part
        index = 1;
        for i = 1:length(wallStructs)
            wallStruct = wallStructs(i);
            wallStruct.vertices = wallStruct.vertices(wallStruct.vertices*wallStruct.upVector' < (lowestHighestPoint + 0.001), :);

            curveStruct = getWallCurve(wallStruct);
            if ~isempty(curveStruct)
                curveStructs(index) = curveStruct;
                index = index + 1;
            end
        end
    else %Assume 4 walls if not provided
        wallStructs.vertices = wallStructs.vertices(wallStructs.vertices*wallStructs.upVector' < (lowestHighestPoint + 0.001), :);
        for i = 1:4
            rotationVector = wallStructs.upVector * (i-1)*pi/4;
            R = rotationVectorToMatrix(rotationVector);
            wallStructs.frontVector = (R*wallStructs.frontVector');
            curveStruct = getWallCurve(wallStructs);
            if ~isempty(curveStruct)
                curveStructs(index) = curveStruct;
                index = index + 1;
            end
        end
    end
end